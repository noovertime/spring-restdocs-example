plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'java'
    id 'jacoco'
}


group = 'com.noovertime.ex.restdocs'
version = '1'
sourceCompatibility = '17'


repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "src/main/java"]
            exclude "**/*.java"
        }
    }
}

tasks.withType(JavaCompile) {
    configure(options) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"


    implementation 'org.projectlombok:lombok'
    annotationProcessor("org.projectlombok:lombok:")
    testAnnotationProcessor("org.projectlombok:lombok:")


    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'


    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'
    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core
    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'


    /* test 환경 */
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.1'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.1'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-surefire-provider
    testImplementation group: 'org.junit.platform', name: 'junit-platform-surefire-provider', version: '1.3.2'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

// 변수모음
ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('docOutDir', file("build/apidoc"))
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}


// API 문서를 만들고 싶으면 documentation > asciidoctor 실행
asciidoctor {
    inputs.dir snippetsDir
    dependsOn test

    attributes          \
             'snippets': snippetsDir,
            'languages': 'ko',
            'encoding': 'utf-8'

    sources 'index.adoc'
    outputDir docOutDir
}

// jacoco 문서를 만들고 싶으면 verification > jacocoTestReport 실행
jacocoTestReport {
    // 보고 싶을 때 뽑아볼 수 있도록만 설정
    dependsOn test

    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false
    }


    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/**/dto/*.class",
                    "com/**/ExRestDocsApplication.class"
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.7
            }
        }
    }
}


bootJar {
    mainClass = 'com.noovertime.ex.restdocs.ExRestDocsApplication'
    manifest {
        attributes('Implementation-Title': project.name, 'Implementation-Version': project.version)
    }
}
